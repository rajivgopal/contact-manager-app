{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/utils/TextBox.js","components/contacts/AddContact.js","pages/about.js","pages/404.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","Context","createContext","ContactInfoReducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","dispatch","_this","setState","prevState","axios","get","response","this","data","value","props","children","Component","Consumer","Contact","_props$contact","name","email","phone","_useState","useState","_useState2","slicedToArray","showContactInfo","setShowContactInfo","showInfo","deleteInfo","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","delete","t0","console","log","stop","_x","_x2","_x3","apply","arguments","onClick","style","cursor","float","color","Contacts","Fragment","map","contacts_Contact","key","TextBox","label","placeholder","tbEvent","error","htmlFor","classnames","is-invalid","onChange","AddContact","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setPhone","_useState7","_useState8","setError","_event$target","target","addContact","preventDefault","abrupt","post","sent","history","push","onSubmit","utils_TextBox","About","NotFound","App","width","align","context","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea17c2dd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ branding }) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav nav-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/add/contact\">\n                <i className=\"fas fa-plus\" />\n                Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My Contact App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst Context = createContext();\n\nconst ContactInfoReducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_INFO\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_INFO\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    default:\n      return state;\n  }\n};\n\nclass Provider extends Component {\n  state = {\n    contacts: [\n    ],\n    dispatch: action =>\n      this.setState(prevState => ContactInfoReducer(prevState, action))\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    this.setState({\n      contacts: response.data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\nexport default Provider;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { async } from \"q\";\n\nconst Contact = props => {\n  const { id, name, email, phone } = props.contact;\n  const [showContactInfo, setShowContactInfo] = useState(true);\n\n  const showInfo = () => {\n    setShowContactInfo(!showContactInfo);\n  };\n\n  const deleteInfo = async (event, id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (e) {\n      console.log(\"Is it 404?\");\n    }\n\n    dispatch({ type: \"DELETE_INFO\", payload: id });\n  };\n\n  return (\n    <Consumer>\n      {value => {\n        return (\n          <div className=\"card card-body mb-3\">\n            <h4>\n              {name}\n              <i\n                className=\"fas fa-sort-down\"\n                onClick={showInfo}\n                style={{ cursor: \"pointer\" }}\n              />\n              <i\n                className=\"fas fa-times\"\n                style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                onClick={event => deleteInfo(event, id, value.dispatch)}\n              />\n            </h4>\n            {showContactInfo ? (\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n              </ul>\n            ) : null}\n          </div>\n        );\n      }}\n    </Consumer>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","// import React, { useState } from \"react\";\nimport React from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nconst Contacts = () => {\n  \n\n  // const deleteInfo = (event, id) => {\n  //   const tempContacts = contacts.filter(contact => contact.id !== id);\n  //   setContacts(tempContacts);\n  // };\n\n  return (\n    <>\n      <h1 className=\"display-4 mb-2\">\n        <span className=\"text-danger\">Contact</span> List\n      </h1>\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return contacts.map(contact => (\n            <Contact\n              key={contact.id}\n              contact={contact}\n              // deleteInfo={deleteInfo}\n            />\n          ));\n        }}\n      </Consumer>\n    </>\n  );\n};\n\nexport default Contacts;\n\n/* {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} deleteInfo={deleteInfo} />\n      ))} */\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextBox = props => {\n  const {\n    label,\n    name,\n    type,\n    className,\n    placeholder,\n    value,\n    tbEvent,\n    error\n  } = props;\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        className={classnames(className, { \"is-invalid\": error })}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={tbEvent}\n        error={error}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextBox.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  tbEvent: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextBox.defaultProps = {\n  type: \"textbox\"\n};\n\nexport default TextBox;\n","import React, { useState } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextBox from \"../utils/TextBox\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\nimport { async } from \"q\";\n\nconst AddContact = props => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [error, setError] = useState({});\n\n  const onChange = event => {\n    const { name, value } = event.target;\n    if (name === \"name\") setName(value);\n    else if (name === \"email\") setEmail(value);\n    else if (name === \"phone\") setPhone(value);\n  };\n\n  const addContact = async (event, dispatch) => {\n    event.preventDefault();\n    if (name === \"\") {\n      setError({ name: \"Name is required\" });\n      return;\n    } else if (email === \"\") {\n      setError({ email: \"Email is required\" });\n      return;\n    } else if (phone === \"\") {\n      setError({ phone: \"Phone is required\" });\n      return;\n    }\n\n    const response = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      {\n        name,\n        email,\n        phone\n      }\n    );\n\n    dispatch({ type: \"ADD_INFO\", payload: response.data });\n\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setError({});\n\n    props.history.push(\"/\");\n  };\n\n  return (\n    <>\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card card-mb3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={event => addContact(event, value.dispatch)}>\n                  <TextBox\n                    label=\"Name\"\n                    name=\"name\"\n                    className=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    tbEvent={event => onChange(event)}\n                    error={error.name}\n                  />\n\n                  <TextBox\n                    label=\"Email\"\n                    name=\"email\"\n                    className=\"form-control form-control-lg\"\n                    type=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    tbEvent={event => onChange(event)}\n                    error={error.email}\n                  />\n                  <TextBox\n                    label=\"Phone\"\n                    name=\"phone\"\n                    className=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    tbEvent={event => onChange(event)}\n                    error={error.phone}\n                  />\n                  <input\n                    className=\"btn btn-light btn-block\"\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    </>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact App</h1>\n      <p className=\"lead\">App to manage contacts</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, we dont have what you are looking for!!!!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Provider from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./pages/about\";\nimport NotFound from \"./pages/404\";\n\nfunction App() {\n  return (\n    <div className=\"container\" style={{ width: \"600px\", align: \"left\" }}>\n      <Provider>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/add/contact\" component={AddContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}